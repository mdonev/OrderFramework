@model PagedList.IPagedList<OpenOrderFramework.Models.Order>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<style>
    table {
        background-color: white;
    }

    #SearchString {
        height: 33px;
        width: 230px;
    }
</style>
@{
    ViewBag.Title = "Index";
}
<h2>Orders Main</h2>
<div class="bs-docs-section">
    <div class="row">
        @using (Html.BeginForm("Index", "Items", FormMethod.Get))
        {

            <div class="form-group">
                <div class="input-group">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = "Find by Name" })
                    @*<span class="input-group-btn">*@
                    <input type="submit" class="btn btn-info btn-md" value="Find" />
                    @*</span>*@
                </div>
            </div>
        }
    </div>
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped table-hover" id="data">
    <tr>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Last Name
        </th>
        @*<th>
                @Html.ActionLink("Order Total", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>*@
        <th>
            Address
        </th>
        <th>
            City
        </th>
        <th>
            State
        </th>
        <th>
            Postal Code
        </th>
        <th>
            Country
        </th>
        <th>
            Phone
        </th>
        <th>
            Email
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr id="active">
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Total)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>

            <td>
                @Html.ActionLink("Details", "Details", new { id = item.OrderId }, new { @class = "btn btn-info" }) |
                @Html.ActionLink("Edit", "Edit", new { id = item.OrderId }, new { @class = "btn btn-primary" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.OrderId }, new { @class = "btn btn-danger" })|
                <script type="text/javascript">
                    $(document).ready(function () {
                        $("#orderdone").click(function () {
                            $("#active").addclass(".danger");
                        });
                    });

                </script>
                <input type="submit" id="orderdone" value="Order Done" class="btn btn-success" />
            </td>
        </tr>
    }
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
